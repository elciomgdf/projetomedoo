openapi: 3.0.0
info:
  title: Projeto Medoo API
  version: 1.0.0
  description: API REST para o sistema de Tarefas

servers:
  - url: https://projetomedoo.test
    description: Ambiente de desenvolvimento local

paths:
  /api/sign-up:
    post:
      summary: Cadastro de novo usuário
      description: Cria uma nova conta de usuário no sistema.
      tags: [Autenticação]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, email, password]
              properties:
                name:
                  type: string
                  example: Elcio Guimarães
                email:
                  type: string
                  format: email
                  example: elcioguimaraes@outlook.com
                password:
                  type: string
                  example: homologa
      responses:
        '201':
          description: Usuário criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '400':
          description: Erros de validação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroValidacao'

  /api/auth/login:
    post:
      summary: Login do usuário
      description: Autenticação via e-mail e senha. Retorna token JWT.
      tags: [Autenticação]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                  example: elcioguimaraes@gmail.com
                password:
                  type: string
                  example: homologa
      responses:
        '200':
          description: Login realizado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: Wn6nr6yQ
                  token:
                    type: string
                    example: eyJ0eXAiOiJKV1QiLCJh...
        '400':
          description: Erro de validação ou credenciais inválidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroValidacao'
        '422':
          description: Campos obrigatórios ausentes
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: E-mail e senha são obrigatórios.

  /api/recover-password:
    post:
      summary: Recuperar senha
      description: Envia e-mail com instruções para redefinir senha, se o e-mail for válido.
      tags: [Autenticação]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email]
              properties:
                email:
                  type: string
                  format: email
                  example: elcioguimaraes@gmail.com
      responses:
        '200':
          description: Mensagem enviada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Caso você possua cadastro com o e-mail informado, seus dados de acesso chegarão em instantes.

  /api/auth/logout:
    post:
      summary: Logout do usuário
      description: Encerra a sessão do usuário autenticado.
      security:
        - bearerAuth: []
      tags: [Autenticação]
      responses:
        '200':
          description: Logout efetuado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Logout efetuado com sucesso
        '400':
          description: Logout inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroValidacao'

  /api/user/{id}:
    get:
      summary: Obter detalhes de um usuário
      tags: [Usuários]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          example: Wn6nr6yQ
      responses:
        '200':
          description: Dados do usuário retornados com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '404':
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroValidacao'

  /api/user/{id}/update:
    put:
      summary: Atualizar dados do usuário
      tags: [Usuários]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                password_confirm:
                  type: string
      responses:
        '200':
          description: Usuário atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '422':
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroValidacao'

  /api/user/search:
    get:
      summary: Buscar usuários com paginação e filtros
      tags: [Usuários]
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
        - name: per_page
          in: query
          schema:
            type: integer
        - name: order
          in: query
          schema:
            type: string
        - name: direction
          in: query
          schema:
            type: string
        - name: q
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Lista de usuários
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Usuario'
                  current_page:
                    type: integer
                  next_page:
                    type: integer
                    nullable: true
                  previous_page:
                    type: integer
                    nullable: true
                  per_page:
                    type: integer
                  total_pages:
                    type: integer
                  total:
                    type: integer
  /api/category/create:
    post:
      summary: Criar nova categoria
      tags: [Categorias]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name]
              properties:
                name:
                  type: string
                description:
                  type: string
      responses:
        '201':
          description: Categoria criada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categoria'
        '422':
          description: Categoria já existente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroValidacao'

  /api/categories:
    get:
      summary: Listar categorias
      tags: [Categorias]
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: Lista de categorias
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Categoria'

  /api/category/{id}:
    get:
      summary: Obter detalhes de uma categoria
      tags: [Categorias]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Categoria retornada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categoria'
        '404':
          description: Categoria não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroValidacao'

  /api/category/search:
    get:
      summary: Buscar categorias com paginação e filtros
      tags: [Categorias]
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
        - name: per_page
          in: query
          schema:
            type: integer
        - name: q
          in: query
          schema:
            type: string
        - name: order
          in: query
          schema:
            type: string
        - name: direction
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Lista de categorias
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Categoria'
                  current_page:
                    type: integer
                  next_page:
                    type: integer
                    nullable: true
                  previous_page:
                    type: integer
                    nullable: true
                  per_page:
                    type: integer
                  total_pages:
                    type: integer
                  total:
                    type: integer

  /api/category/{id}/update:
    put:
      summary: Atualizar categoria
      tags: [Categorias]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
      responses:
        '200':
          description: Categoria atualizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categoria'
        '422':
          description: Categoria já existente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroValidacao'

  /api/category/{id}/delete:
    delete:
      summary: Excluir categoria
      tags: [Categorias]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Categoria excluída com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
                    example: Registro excluído com sucesso
        '404':
          description: Categoria não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroValidacao'

  /api/task/create:
    post:
      summary: Criar nova tarefa
      tags: [Tarefas]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [category_id, title, status, priority, due_date]
              properties:
                category_id:
                  type: integer
                title:
                  type: string
                description:
                  type: string
                status:
                  type: string
                priority:
                  type: string
                due_date:
                  type: string
                  format: date
      responses:
        '201':
          description: Tarefa criada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tarefa'
        '422':
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroValidacao'
  /api/task/{id}:
    get:
      summary: Obter detalhes de uma tarefa
      tags: [Tarefas]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Detalhes da tarefa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tarefa'
        '404':
          description: Tarefa não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroValidacao'

  /api/task/search:
    get:
      summary: Buscar tarefas com filtros e paginação
      tags: [Tarefas]
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
        - name: per_page
          in: query
          schema:
            type: integer
        - name: order
          in: query
          schema:
            type: string
        - name: direction
          in: query
          schema:
            type: string
        - name: q
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
        - name: priority
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Lista de tarefas
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tarefa'
                  current_page:
                    type: integer
                  next_page:
                    type: integer
                    nullable: true
                  previous_page:
                    type: integer
                    nullable: true
                  per_page:
                    type: integer
                  total_pages:
                    type: integer
                  total:
                    type: integer

  /api/task/{id}/update:
    put:
      summary: Atualizar tarefa
      tags: [Tarefas]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                category_id:
                  type: integer
                title:
                  type: string
                description:
                  type: string
                status:
                  type: string
                priority:
                  type: string
                due_date:
                  type: string
                  format: date
      responses:
        '200':
          description: Tarefa atualizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tarefa'
        '422':
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroValidacao'

  /api/task/{id}/delete:
    delete:
      summary: Excluir tarefa
      tags: [Tarefas]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Tarefa excluída com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
                    example: Registro excluído com sucesso
        '404':
          description: Tarefa não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroValidacao'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Usuario:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        encoded_id:
          type: string

    Categoria:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        encoded_id:
          type: string

    Tarefa:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        category_id:
          type: integer
        title:
          type: string
        description:
          type: string
        status:
          type: string
        priority:
          type: string
        due_date:
          type: string
          format: date
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        encoded_id:
          type: string
        category:
          type: string

    ErroValidacao:
      type: object
      properties:
        type:
          type: string
          example: warning
        message:
          type: string
          example: Campo inválido ou ausente
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          example:
            campo:
              - Campo é obrigatório
              - Formato inválido